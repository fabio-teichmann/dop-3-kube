apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.persistentVolumeClaim.name }}
  namespace: {{ .Values.global.namespace}}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.persistentVolumeClaim.storage }}

---

apiVersion: apps/v1
kind: Deployment 
metadata:
  name: {{ .Values.global.rabbitmq.hostName }}
  namespace:  {{ .Values.global.namespace}}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.global.rabbitmq.hostName }}
  template: 
    metadata:
      labels:
        app: {{ .Values.global.rabbitmq.hostName }}
    spec:
      containers:
        - name: {{ .Values.global.rabbitmq.hostName }} 
          image: rabbitmq:3-management
          ports:
            - containerPort: {{ .Values.global.rabbitmq.port }}
            - containerPort: {{ .Values.application.mgtPort }}
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          {{- with .Values.application.env }}
          env:
            {{- toYaml . | nindent 12}}
          {{- end}}
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolumeClaim.name }}

--- 

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.global.rabbitmq.hostName }}
  namespace: {{ .Values.global.namespace }}
  labels: 
    {{- include "kube-project.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  selector:
    app: {{ .Values.global.rabbitmq.hostName }}
  ports:
    - name: amqp
      protocol: TCP
      port: {{ .Values.global.rabbitmq.port }}
    - name: management
      protocol: TCP
      port: {{ .Values.application.mgtPort }}

